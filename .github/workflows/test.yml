# Based on https://gist.github.com/mstksg/11f753d891cee5980326a8ea8c865233

name: Haskell Tests

on:
  pull_request:
  push:
    branches:
      - main
      - 'releases/*'

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
        plan:
        - { build: stack, arg: "stack.yaml" }
        - { build: stack, arg: "stack-19.yaml" }
        include:
          - os: macOS-latest
            brew: z3 md5sha1sum
          - os: ubuntu-latest
            apt-get: z3
  
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install OS Packages
      uses: mstksg/get-package@v1
      with:
        apt-get: ${{ matrix.apt-get }}
        brew: ${{ matrix.brew }}
    
    - uses: actions/checkout@v3

    - name: Setup stack
      run: |
        set -ex
        mkdir -p "${HOME}/.local/bin"
        case ${{ matrix.os }} in
          macOS-latest)
            curl --insecure -L https://get.haskellstack.org/stable/osx-x86_64.tar.gz | tar xz --strip-components=1 --include '*/stack' -C ~/.local/bin
            ;;
          ubuntu-latest)
            curl -L https://get.haskellstack.org/stable/linux-x86_64.tar.gz | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack' 
            ;;
        esac
        echo "${HOME}/.local/bin" >> $GITHUB_PATH

    - name: Cache Key
      id: cache_key
      run: |
        echo ::set-output name=key_stack::$(md5sum stack.yaml | awk '{print $1}')
        echo ::set-output name=key_pkg1::$(md5sum pkg1/package.yaml | awk '{print $1}')
        echo ::set-output name=key_pkg2::$(md5sum pkg2/package.yaml | awk '{print $1}')

    - name: Cache Dependencies
      id: cache
      uses: actions/cache@v1
      with:
        path: ~/.stack
        key: ${{ matrix.os }}-${{ matrix.plan.build }}-${{ matrix.plan.arg }}-${{ steps.cache_key.outputs.key_stack }}-${{ steps.cache_key.outputs.key_pkg1 }}-${{ steps.cache_key.outputs.key_pkg2 }}
        restore-keys: |
          ${{ matrix.os }}-${{ matrix.plan.build }}-${{ matrix.plan.arg }}
          ${{ matrix.os }}

    - name: Install dependencies
      run: |
        set -ex
        case "$BUILD" in
          stack)
            stack --no-terminal --install-ghc --stack-yaml $ARGS test --bench --only-dependencies
            ;;
        esac
        set +ex
      env:
        ARGS: ${{ matrix.plan.arg }}
        BUILD: ${{ matrix.plan.build }}
    
    - name: Build & Test
      id: test
      run: |
        set -ex
        case "$BUILD" in
          stack)
            stack --no-terminal --stack-yaml $ARGS test --bench --no-run-benchmarks --coverage --test-arguments "--xml=haskell-test-report.xml"
            ;;
        esac
        set +ex
      env:
        ARGS: ${{ matrix.plan.arg }}
        BUILD: ${{ matrix.plan.build }}
    
    - uses: test-summary/action@v1
      with:
        paths: '**/haskell-test-report.xml'
      if: success() || failure ()

    - uses: phoenix-actions/test-reporting@v8
      if: success() || failure ()
      with:
        name: Tests
        path: '**/haskell-test-reporting.xml'
        reporter: java-junit

    - name: Upload Coveralls
      run: |
        set -ex
        wget https://github.com/rubik/stack-hpc-coveralls/releases/download/v0.0.6.1/shc-linux-x64-8.10.4.tar.bz2 && tar -xjf shc-linux-x64-8.10.4.tar.bz2 && ./shc --repo-token=${{ secrets.COVERALLS_REPO_TOKEN }} combined all || true
        set +ex
      if: matrix.os == 'ubuntu-latest' && matrix.plan.build == 'stack' && matrix.plan.arg == 'stack.yaml'
      env:
        ARGS: ${{ matrix.plan.arg }}
        BUILD: ${{ matrix.plan.build }}

    - name: Build doc
      run: |
        set -ex
        case "$BUILD" in
          stack)
            stack --no-terminal --stack-yaml $ARGS haddock
            ;;
        esac
        set +ex
      if: matrix.os == 'ubuntu-latest' && matrix.plan.build == 'stack' && matrix.plan.arg == 'stack.yaml'
      env:
        ARGS: ${{ matrix.plan.arg }}
        BUILD: ${{ matrix.plan.build }}
    
    - name: Haddock path
      id: haddock_path
      run: echo ::set-output name=haddock_path::$(stack path --stack-yaml stack.yaml --local-doc-root)
      if: matrix.os == 'ubuntu-latest' && matrix.plan.build == 'stack' && matrix.plan.arg == 'stack.yaml'
        
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      if: matrix.os == 'ubuntu-latest' && matrix.plan.build == 'stack' && matrix.plan.arg == 'stack.yaml'
      with:
        name: haddock
        path: ${{ steps.haddock_path.outputs.haddock_path }}
